@page "/event/{slug}"
@attribute [Authorize(Policy = "Admin.Events.*")]
@inject Microsoft.Extensions.Localization.IStringLocalizer<App> Localize

@using Microsoft.AspNetCore.Authorization
@using NetEvent.Client.Components
@using NetEvent.Client.Components.Administration
@using NetEvent.Client.Extensions
@using NetEvent.Shared.Config
@using NetEvent.Shared.Dto
@using System.Globalization
@using TinyMCE.Blazor

<div class="ma-4">
    @if (_Loading)
    {
        <NetEventLoading />
    }
    else if (_Event != null)
    {
        <div class="d-flex flex-row align-start">
            <MudText Typo="Typo.h3" Class="ma-4 d-inline">@_Event.Name</MudText>

            <AuthorizeView Policy="Admin.Events.Edit">
                <Authorized>
                    <MudButton Class="ma-4" Variant="Variant.Text" Color="Color.Primary" Href="@UrlHelper.GetEventLink(_Event.Id!)" StartIcon="@Icons.Material.Outlined.Edit" />
                </Authorized>
            </AuthorizeView>
        </div>
        <MudText Typo="Typo.body2">@_Event.StartDate?.ToString("d", CultureInfo.CurrentUICulture) - @_Event.EndDate?.ToString("d", CultureInfo.CurrentUICulture)</MudText>


        @if (_Event.State != PublishStateDto.Published)
        {
            <MudChip Color="GetStateColor(_Event.State)">@Localize["Administration.Events.Event.PublishState." + @_Event.State.ToString()]</MudChip>
        }

        @if (_Event.Description != null)
        {
            <MudText Typo="Typo.body2">@((MarkupString)_Event.Description)</MudText>
        }

    }
    else
    {
        <MudText Typo="Typo.h2" Class="ma-4">Event not found</MudText>
    }
</div>