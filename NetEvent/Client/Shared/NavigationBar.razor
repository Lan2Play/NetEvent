@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <MudButton Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" Href="profile/manage" Match="NavLinkMatch.Prefix">Hello, @context.User.Identity?.Name!</MudButton>
        <MudButton Variant="Variant.Filled" DisableElevation="true" Color="Color.Secondary" OnClick="BeginSignOut">Log out</MudButton>
    </Authorized>
    <NotAuthorized>
        <MudButton Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" Href="authentication/register" Match="NavLinkMatch.Prefix">Register</MudButton>
        <MudButton Variant="Variant.Filled" DisableElevation="true" Color="Color.Secondary" Href="authentication/login" Match="NavLinkMatch.Prefix">Log in</MudButton>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
}
