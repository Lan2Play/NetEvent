name: NetEvent_build
on:
  push:
    branches: 
    - OpenIdDict
    - develop
    tags: [ v**]
    paths:
    - '**'
    - '!Docs/**'
    - '!packaging/Docs**'
    - '!README.md'
    - '!.github/workflows/website_build.yml'
  pull_request:
    branches: 
    - OpenIdDict
    - develop
    tags: [ v**]
    paths:
    - '**'
    - '!Docs/**'
    - '!packaging/Docs**'
    - '!README.md'
    - '!.github/workflows/website_build.yml'

jobs:

 build_linux_x64:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.x.x
    - name: set Version
      if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "NETEVENTVER=$(echo ${GITHUB_REF} | sed 's|refs/heads/||g' | sed 's|refs/tags/v||g' | sed 's|-beta||g' )" >> $GITHUB_ENV  
    - name: set Version
      if: ${{ !(startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "NETEVENTVER=1.0.0+1" >> $GITHUB_ENV  
    - name: set dotnetversionnumber
      run:  echo "NETEVENTNETVER=$(echo \"$NETEVENTVER\" | sed 's|+|.|g')" >> $GITHUB_ENV
      shell: bash
    - name: Restore dependencies
      run: dotnet restore
    - name: Build linux dotnet
      run: dotnet publish -r linux-x64 -c release --output Release -p:Version=$NETEVENTNETVER
    # - name: copy linux x64
    #   run: mkdir -p upload/linux_x64 && cp -rf ./Release/* upload/linux_x64/ && cd upload/linux_x64/ && rm -rf *.pdb && tar cfvz ../linux_x64.tar.gz *
    # - name: upload artifact linux Host x64
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: latest_linux_host_x64
    #     path: upload/
    #     retention-days: 1
